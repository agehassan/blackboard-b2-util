<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<project xmlns:ivy="antlib:org.apache.ivy.ant" name="PROJECT_NAME" basedir="." default="dist">
    <property file="build.properties"/>
    <property file="local.properties"/>
    <property name="b2context.url" value="http://projects.oscelot.org/gf/download/frsrelease/669/4384/"/>
    <property name="b2context.zip_basename" value="B2Context-1.2.00"/>
    <property name="b2context.jar" value="b2context-1.2.00.jar"/>

    <path id="classpath.master">
        <fileset dir="${bb.sdk}">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement path="${build}"/>
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath.build">
        <pathelement location="${build.test}"/>
        <path refid="classpath.master" />
    </path>
    
    <path id="classpath.test">
        <pathelement location="${build.test}"/>
        <fileset dir="lib/test">
            <include name="**/*.jar"/>
        </fileset>
        <path refid="classpath.master" />
    </path>

    <target name="pre">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="install-ivy" description="Install the ivy task jar">
        <mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ivy.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.2.0/ivy-2.2.0.jar"/>
    </target>

    <target name="resolve" description="Retrieve dependencies with ivy">
        <ivy:retrieve pattern="${ivy.lib.dir}/[conf]/[artifact]-[type]-[revision].[ext]"/>
    </target>

    <target name="ivy-report" depends="pre" description="Generate ivy dependency report">
        <mkdir dir="${reports.ivy}" />
        <ivy:resolve type="${ivy.resolve.types}"/>
        <ivy:report todir="${reports.ivy}" />
    </target>

    <target name="build" description="Compile main source tree java files" depends="pre, resolve">
        <fail message="Please set bb.sdk property in local.properties to your Blackboard SDK directory" unless="bb.sdk"/>
        <javac destdir="${build}" source="1.6" target="1.6" debug="true"
               deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
            <src path="${src}"/>
            <classpath refid="classpath.master"/>
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}" excludes="**/*.java" />
        </copy>
    </target>

    <target name="dist" depends="build" description="Make the jar file">
        <mkdir dir="${dist}" />
        <jar destfile="${dist}/${package.name}.jar" basedir="${build}"/>
    </target>

    <target name="buildtests" description="Compile test tree java files" depends="pre, resolve, build">
        <mkdir dir="${build.test}" />
        <javac srcdir="${src.test}" destdir="${build.test}" debug="true"
            deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>
        <copy todir="${build.test}">
            <fileset dir="${src.test}" excludes="**/*.java" />
        </copy>
    </target>

    <target name="test" depends="build, buildtests" description="Run tests">
        <junit printsummary="on"
            fork="false"
            haltonfailure="false"
            failureproperty="tests.failed"
            showoutput="true">
            <classpath refid="classpath.test"/>
            <formatter type="brief" usefile="false"/>

            <batchtest haltonfailure="no" fork="yes">
                <fileset dir="${build.test}">
                    <include name="**/*Test.*"/>
                </fileset>
            </batchtest>

        </junit>

        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>

    <target name="test-ci" description="Run test for ci server" depends="build, buildtests">
        <mkdir dir="${reports.test}"/>
        <junit printsummary="yes" haltonfailure="yes" showoutput="no">
            <classpath refid="classpath.test"/>
            <formatter type="xml"/> 
            <batchtest haltonfailure="no" fork="yes" todir="${reports.test}"> 
                <fileset dir="${build.test}"> 
                    <include name="**/*.class" /> 
                </fileset> 
            </batchtest> 
        </junit>
    </target>

    <target name="clean" description="Clean the project">
        <delete dir="${build}" />
        <delete dir="${build.test}" />
        <delete dir="${dist}" />
        <delete dir="${reports.base}" />
        <delete dir="${ivy.lib.dir}"/>
    </target>

    <target name="check-compatibility" description="Check compatibility">
        <get src="http://bb-secure-starter.googlecode.com/svn-history/r2/trunk/lib/fibbba-ant.jar" dest="${ivy.lib.dir}" skipexisting="true"/>
        <taskdef name="fibbba" classname="com.blackboard.fibbba.CheckFibbbaTask" classpath="${ivy.lib.dir}/fibbba-ant.jar" />
        <fibbba srcfile="${dist}/${package.name}.jar" email="${contact}"/>
    </target>

    <!--<taskdef resource="checkstyletask.properties" classpathref="classpath.master"/>-->

    <target name="checkstyle" description="Generates a report of code convention violations.">

        <checkstyle config="docs/checkstyle_checks.xml" failureProperty="checkstyle.failure" failOnViolation="false">
            <formatter type="xml" tofile="${reports.checkstyle}/checkstyle_report.xml"/>
            <fileset dir="${src}" includes="**/*.java"/>
        </checkstyle>

        <!--<style in="${reports.checkstyle}/checkstyle_report.xml" out="${reports.checkstyle}/checkstyle_report.html" style="docs/checkstyle.xsl"/>-->

    </target>

    <target name="run-ci" description="Run all tasks for ci server" depends="test-ci"/>

    <target name="publish" depends="clean,dist" description="Publish this build into repository">
        <ivy:publish pubrevision="${pub.version}" status="${pub.status}" resolver="${pub.resolver}" >
            <artifacts pattern="${dist}/[artifact].[ext]"/>
        </ivy:publish>
    </target>
</project>
